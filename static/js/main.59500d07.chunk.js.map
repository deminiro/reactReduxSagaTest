{"version":3,"sources":["redux/reducers/changeData.js","redux/reducers/index.js","redux/actions/index.js","components/RenderText.js","components/RenderIcon.js","components/App.js","index.js"],"names":["arr","changeData","state","action","type","allReducers","combineReducers","takeData","RenderText","result","style","marginLeft","Array","isArray","join","defaultProps","RenderIcon","props","numOfDegrees","interval","setInterval","newDegrees","setState","this","clearInterval","icon","faSpinner","className","transform","React","Component","App","store","sagaMiddleware","sagaGenerator","dispatch","useDispatch","useState","setResult","onClick","run","waitArray","getState","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","delay","time","a","Promise","resolve","setTimeout","put","ReactDOM","render","document","getElementById"],"mappings":"8SAAMA,EAAM,CAAC,KAAM,KAAM,QAAS,OAAQ,QAa3BC,EAXI,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOC,MACb,IAAK,UACH,MAAO,OACT,IAAK,YACH,OAAOJ,EACT,QACE,OAAOE,ICDEG,EAJKC,0BAAgB,CAClCC,a,QCDaN,EAJI,iBAAO,CACxBG,KAAM,gBCEFI,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjB,uBAAGC,MAAO,CAAEC,WAAY,SAAYC,MAAMC,QAAQJ,GAAmBA,EAAOK,KAAK,KAArBL,IAG/CD,IAMfA,EAAWO,aAAe,CACxBN,OAAQ,I,4DC0BKO,E,YAnCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDf,MAAQ,CACXgB,aAAc,EACdC,SAAU,IAJK,E,iFAQE,IAAD,OACZA,EAAWC,YAAY,WAAO,IAE5BC,EADmB,EAAKnB,MAAtBgB,aAC0B,GAClC,EAAKI,SAAS,CAAEJ,aAAcG,KAC7B,IAEHE,KAAKD,SAAS,CAAEH,e,6CAGM,IACdA,EAAaI,KAAKrB,MAAlBiB,SACRK,cAAcL,K,+BAGN,IACAD,EAAiBK,KAAKrB,MAAtBgB,aACR,OACE,kBAAC,IAAD,CACEO,KAAMC,IACNC,UAAU,UACVjB,MAAO,CAAEkB,UAAU,UAAD,OAAYV,EAAZ,e,GA9BDW,IAAMC,WCQzBC,G,MAAM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAC9BC,EAAWC,cADuC,EAE5BC,mBAAS,IAFmB,mBAEjD5B,EAFiD,KAEzC6B,EAFyC,KAgBxD,OAbAH,EAAShC,KAcP,yBAAKwB,UAAU,OACb,4BAAQvB,KAAK,SAASuB,UAAU,SAASY,QAb7C,WACE,GAAe,SAAX9B,EAAmB,CACrBwB,EAAeO,IAAIN,GACnB,IAAMf,EAAWC,YAAY,WAC3B,IAAMqB,EAAYT,EAAMU,WACxBJ,EAAUG,EAAUlC,UAChBK,MAAMC,QAAQ4B,EAAUlC,WAAWiB,cAAcL,IACpD,OAMH,aACA,6BACc,SAAXV,EACG,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYA,OAAQA,QAMjBsB,IAQfA,EAAIhB,aAAe,CACjBiB,MAAO,GACPC,eAAgB,aAChBC,cAAe,c,eC5BPA,GAZJD,EAAiBU,cACjBX,EAAQY,sBACZC,EACAC,8BACEC,0BAAgBd,K,SAILe,E,6EAAf,WAAqBC,GAArB,SAAAC,EAAA,qEACQ,IAAIC,QAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASH,KADrD,0C,sBAIA,SAAUf,IAAV,gEACE,OADF,SACQoB,YAAI,CAAElD,KAAM,YADpB,OAEE,OAFF,SAEQ4C,EAAM,KAFd,OAGE,OAHF,SAGQM,YAAI,CAAElD,KAAM,cAHpB,sCAOAmD,IAASC,OACP,kBAAC,IAAD,CAAUxB,MAAOA,GACf,kBAAC,EAAD,CAAKA,MAAOA,EAAOC,eAAgBA,EAAgBC,cAAeA,KAEpEuB,SAASC,eAAe,W","file":"static/js/main.59500d07.chunk.js","sourcesContent":["const arr = ['It', 'is', 'redux', 'saga', 'test'];\n\nconst changeData = (state = [], action) => {\n  switch (action.type) {\n    case 'SPINNER':\n      return 'icon';\n    case 'TAKE_DATA':\n      return arr;\n    default:\n      return state;\n  }\n};\n\nexport default changeData;\n","import { combineReducers } from 'redux';\n\nimport takeData from './changeData';\n\nconst allReducers = combineReducers({\n  takeData,\n});\n\nexport default allReducers;\n","const changeData = () => ({\n  type: 'CHANGE_DATA',\n});\n\nexport default changeData;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst RenderText = ({ result }) => (\n  <p style={{ marginLeft: '30px' }}>{!Array.isArray(result) ? result : result.join(' ')}</p>\n);\n\nexport default RenderText;\n\nRenderText.propTypes = {\n  result: propTypes.array,\n};\n\nRenderText.defaultProps = {\n  result: [],\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nclass RenderIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numOfDegrees: 0,\n      interval: '',\n    };\n  }\n\n  componentDidMount() {\n    const interval = setInterval(() => {\n      const { numOfDegrees } = this.state;\n      const newDegrees = numOfDegrees + 10;\n      this.setState({ numOfDegrees: newDegrees });\n    }, 50);\n\n    this.setState({ interval });\n  }\n\n  componentWillUnmount() {\n    const { interval } = this.state;\n    clearInterval(interval);\n  }\n\n  render() {\n    const { numOfDegrees } = this.state;\n    return (\n      <FontAwesomeIcon\n        icon={faSpinner}\n        className=\"spinner\"\n        style={{ transform: `rotate(${numOfDegrees}deg)` }}\n      />\n    );\n  }\n}\n\nexport default RenderIcon;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport action from '../redux/actions';\n\nimport RenderText from './RenderText';\nimport RenderIcon from './RenderIcon';\n\nimport './style.css';\n\n\nconst App = ({ store, sagaMiddleware, sagaGenerator }) => {\n  const dispatch = useDispatch();\n  const [result, setResult] = useState([]);\n  dispatch(action());\n\n  function onClickChange() {\n    if (result !== 'icon') {\n      sagaMiddleware.run(sagaGenerator);\n      const interval = setInterval(() => {\n        const waitArray = store.getState();\n        setResult(waitArray.takeData);\n        if (Array.isArray(waitArray.takeData)) clearInterval(interval);\n      }, 50);\n    }\n  }\n\n  return (\n    <div className=\"div\">\n      <button type=\"button\" className=\"button\" onClick={onClickChange}>Take data</button>\n      <div>\n        {result === 'icon'\n          ? <RenderIcon />\n          : <RenderText result={result} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\nApp.propTypes = {\n  store: propTypes.object,\n  sagaMiddleware: propTypes.func,\n  sagaGenerator: propTypes.func,\n};\n\nApp.defaultProps = {\n  store: {},\n  sagaMiddleware: () => {},\n  sagaGenerator: () => {},\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { put } from 'redux-saga/effects';\n\nimport reducer from './redux/reducers';\nimport App from './components/App';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n  ),\n);\n\nasync function delay(time) {\n  await new Promise((resolve) => setTimeout(resolve, time));\n}\n\nfunction* sagaGenerator() {\n  yield put({ type: 'SPINNER' });\n  yield delay(3000);\n  yield put({ type: 'TAKE_DATA' });\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} sagaMiddleware={sagaMiddleware} sagaGenerator={sagaGenerator} />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}